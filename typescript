Script started on Thu 25 Jun 2015 01:37:34 PM PDT
]0;saurabh@saurabh-Inspiron-N5010: ~/model_checking/new2-lockmodel/lock-modelsaurabh@saurabh-Inspiron-N5010:~/model_checking/new2-lockmodel/lock-model$ ./jpf.sh 
JavaPathfinder core system v8.0 (rev 25+) - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
harness.Environment.main()

====================================================== search started: 6/25/15 1:37 PM
mutex id: 0
mutex id: 1
mutex id: 2
mutex id: 3
mutex id: 4
mutex id: 5
Thread 0 has priority 3 and uses locks 1, and 2.
Thread 2 has priority 1 and uses lock 1.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
thread: 3adding mutex: 2 to its mutexOrderList
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 3adding mutex: 2 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
 holder = null Released Mutex: 2 by thread: 3
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
 holder = null Released Mutex: 2 by thread: 3
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
thread: 3adding mutex: 2 to its mutexOrderList
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 3adding mutex: 2 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
 holder = null Released Mutex: 2 by thread: 3
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
 holder = null Released Mutex: 2 by thread: 3
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread: 3adding mutex: 2 to its mutexOrderList
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread: 3adding mutex: 2 to its mutexOrderList
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread: 3adding mutex: 2 to its mutexOrderList
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread: 3adding mutex: 2 to its mutexOrderList
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread: 3adding mutex: 2 to its mutexOrderList
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
thread: 3adding mutex: 2 to its mutexOrderList
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 3adding mutex: 2 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
 holder = null Released Mutex: 2 by thread: 3
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
 holder = null Released Mutex: 2 by thread: 3
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
thread: 3adding mutex: 2 to its mutexOrderList
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 1 by thread: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 3adding mutex: 2 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
 holder = null Released Mutex: 2 by thread: 3
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
 holder = null Released Mutex: 2 by thread: 3
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread: 3adding mutex: 2 to its mutexOrderList
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
thread: 3adding mutex: 2 to its mutexOrderList
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 2 by thread: 3
Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
thread-id:3 acquiring mutex 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
thread: 3adding mutex: 2 to its mutexOrderList
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
thread-id:3 acquiring mutex 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Checking--->Mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread-id:3 acquiring mutex 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread: 3adding mutex: 2 to its mutexOrderList
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
 holder = null Released Mutex: 2 by thread: 3
chcking holder id before crashing: 1 And iterating over its list of mutex
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread-id:3 acquiring mutex 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread: 3adding mutex: 2 to its mutexOrderList
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
 holder = null Released Mutex: 2 by thread: 3
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread: 3adding mutex: 2 to its mutexOrderList
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
 holder = null Released Mutex: 2 by thread: 3
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
thread-id:3 acquiring mutex 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
thread: 3adding mutex: 2 to its mutexOrderList
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
thread-id:3 acquiring mutex 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Checking--->Mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread-id:3 acquiring mutex 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread: 3adding mutex: 2 to its mutexOrderList
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
 holder = null Released Mutex: 2 by thread: 3
chcking holder id before crashing: 1 And iterating over its list of mutex
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread-id:3 acquiring mutex 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread: 3adding mutex: 2 to its mutexOrderList
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
 holder = null Released Mutex: 2 by thread: 3
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread: 3adding mutex: 2 to its mutexOrderList
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
 holder = null Released Mutex: 2 by thread: 3
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
thread-id:3 acquiring mutex 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
thread: 3adding mutex: 2 to its mutexOrderList
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
thread-id:3 acquiring mutex 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Checking--->Mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread-id:3 acquiring mutex 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread: 3adding mutex: 2 to its mutexOrderList
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
 holder = null Released Mutex: 2 by thread: 3
chcking holder id before crashing: 1 And iterating over its list of mutex
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread-id:3 acquiring mutex 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread: 3adding mutex: 2 to its mutexOrderList
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
 holder = null Released Mutex: 2 by thread: 3
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread: 3adding mutex: 2 to its mutexOrderList
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
 holder = null Released Mutex: 2 by thread: 3
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
 holder = null Released Mutex: 2 by thread: 1
thread id 2 in updateRecPriority
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
Checking--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
updated pr for tid: 1 current pr: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Released Mutex: 1 by thread: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
updated pr for tid: 1 current pr: 1
 holder = null Released Mutex: 2 by thread: 1
updated pr for tid: 1 current pr: 1
 holder = null Released Mutex: 2 by thread: 1
updated pr for tid: 1 current pr: 1
 holder = null Released Mutex: 2 by thread: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
thread-id:3 acquiring mutex 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
thread: 3adding mutex: 2 to its mutexOrderList
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
Checking--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 1
Checking--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 1
Checking--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
thread-id:3 acquiring mutex 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Checking--->Mutex: 1
Checking--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
 holder = null Released Mutex: 2 by thread: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
 holder = null Released Mutex: 2 by thread: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
 holder = null Released Mutex: 2 by thread: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread-id:3 acquiring mutex 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread: 3adding mutex: 2 to its mutexOrderList
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
 holder = null Released Mutex: 2 by thread: 3
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
thread id 2 in updateRecPriority
 holder = null Released Mutex: 2 by thread: 1
thread id 2 in updateRecPriority
 holder = null Released Mutex: 2 by thread: 1
thread id 2 in updateRecPriority
 holder = null Released Mutex: 2 by thread: 1
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread-id:3 acquiring mutex 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread: 3adding mutex: 2 to its mutexOrderList
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
 holder = null Released Mutex: 2 by thread: 3
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
 holder = null Released Mutex: 2 by thread: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
 holder = null Released Mutex: 2 by thread: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
 holder = null Released Mutex: 2 by thread: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
 holder = null Released Mutex: 2 by thread: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread: 3adding mutex: 2 to its mutexOrderList
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
 holder = null Released Mutex: 2 by thread: 3
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
 holder = null Released Mutex: 1 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
--->Mutex: 1
thread id 2 in updateRecPriority
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Checking--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
updated pr for tid: 1 current pr: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
updated pr for tid: 1 current pr: 1
--->Mutex: 1
updated pr for tid: 1 current pr: 1
--->Mutex: 1
updated pr for tid: 1 current pr: 1
--->Mutex: 1
updated pr for tid: 1 current pr: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Checking--->Mutex: 1
--->Mutex: 1
Checking--->Mutex: 1
--->Mutex: 1
Checking--->Mutex: 1
--->Mutex: 1
Checking--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
thread id 2 in updateRecPriority
--->Mutex: 1
thread id 2 in updateRecPriority
--->Mutex: 1
thread id 2 in updateRecPriority
--->Mutex: 1
thread id 2 in updateRecPriority
--->Mutex: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
--->Mutex: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
--->Mutex: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
--->Mutex: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
thread id 2 in updateRecPriority
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Checking--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Checking--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Checking--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Checking--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Checking--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
thread id 2 in updateRecPriority
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
thread id 2 in updateRecPriority
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
thread id 2 in updateRecPriority
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
thread id 2 in updateRecPriority
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 1
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
thread-id:3 acquiring mutex 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
thread: 3adding mutex: 2 to its mutexOrderList
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
thread-id:3 acquiring mutex 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
thread: 3adding mutex: 2 to its mutexOrderList
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
thread-id:3 acquiring mutex 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
thread: 3adding mutex: 2 to its mutexOrderList
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
updated pr for tid: 1 current pr: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
updated pr for tid: 1 current pr: 3
 holder = null Released Mutex: 2 by thread: 1
updated pr for tid: 1 current pr: 3
 holder = null Released Mutex: 2 by thread: 1
updated pr for tid: 1 current pr: 3
 holder = null Released Mutex: 2 by thread: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
thread-id:3 acquiring mutex 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
thread: 3adding mutex: 2 to its mutexOrderList
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
 holder = null Released Mutex: 2 by thread: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
 holder = null Released Mutex: 2 by thread: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
updated pr for tid: 1 current pr: 3
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
updated pr for tid: 1 current pr: 3
--->Mutex: 1
updated pr for tid: 1 current pr: 3
--->Mutex: 1
updated pr for tid: 1 current pr: 3
--->Mutex: 1
updated pr for tid: 1 current pr: 3
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
updated pr for tid: 1 current pr: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 3
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
thread id 2 in updateRecPriority
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread id 2 in updateRecPriority
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Checking--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Checking--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Checking--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Checking--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Checking--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
chcking holder id before crashing: 1 And iterating over its list of mutex
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread id 2 in updateRecPriority
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread id 2 in updateRecPriority
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread id 2 in updateRecPriority
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread id 2 in updateRecPriority
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising pr of tid : 1by tid: 2 frm :3 to: 1
thread id 2 in updateRecPriority
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
Checking--->Mutex: 1
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
chcking holder id before crashing: 1 And iterating over its list of mutex
Checking--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
 holder = null Released Mutex: 2 by thread: 1

====================================================== error 1
gov.nasa.jpf.vm.NoUncaughtExceptionsProperty
java.util.NoSuchElementException
	at java.util.ArrayList$Itr.next(ArrayList.java:854)
	at rtems.Mutex.updateRecPriority(Mutex.java:147)
	at rtems.Mutex.lock(Mutex.java:33)
	at harness.TestThread.run(TestThread.java:22)


====================================================== trace #1
------------------------------------------------------ transition #0 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"ROOT" ,1/1,isCascaded:false}
      [3157 insn w/o sources]
  harness/Environment.java:12    : static final Lock[] locks = { createLock(0), createLock(1), createLock(2), createLock(3), createLock(4), createLock(5) };
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
      [1 insn w/o sources]
  rtems/Mutex.java:8             : public class Mutex extends Lock {
      [2 insn w/o sources]
  rtems/Mutex.java:8             : public class Mutex extends Lock {
  rtems/Mutex.java:1             : package rtems;
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  rtems/Mutex.java:15            : public Mutex(int idx){
  base/Lock.java:3               : public class Lock {
      [1 insn w/o sources]
  base/Lock.java:5               : int count = 0;
  rtems/Mutex.java:12            : int priorityBefore=-1;
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
      [1 insn w/o sources]
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
      [26 insn w/o sources]
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
  rtems/Mutex.java:17            : this.id = idx;
  rtems/Mutex.java:18            : this.nestCount = 0;
  rtems/Mutex.java:19            : this.priorityBefore = -1;
  rtems/Mutex.java:20            : this.holder=null;
  rtems/Mutex.java:21            : }
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  harness/Environment.java:12    : static final Lock[] locks = { createLock(0), createLock(1), createLock(2), createLock(3), createLock(4), createLock(5) };
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  rtems/Mutex.java:15            : public Mutex(int idx){
  base/Lock.java:3               : public class Lock {
      [1 insn w/o sources]
  base/Lock.java:5               : int count = 0;
  rtems/Mutex.java:12            : int priorityBefore=-1;
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
      [1 insn w/o sources]
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
      [26 insn w/o sources]
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
  rtems/Mutex.java:17            : this.id = idx;
  rtems/Mutex.java:18            : this.nestCount = 0;
  rtems/Mutex.java:19            : this.priorityBefore = -1;
  rtems/Mutex.java:20            : this.holder=null;
  rtems/Mutex.java:21            : }
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  harness/Environment.java:12    : static final Lock[] locks = { createLock(0), createLock(1), createLock(2), createLock(3), createLock(4), createLock(5) };
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  rtems/Mutex.java:15            : public Mutex(int idx){
  base/Lock.java:3               : public class Lock {
      [1 insn w/o sources]
  base/Lock.java:5               : int count = 0;
  rtems/Mutex.java:12            : int priorityBefore=-1;
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
      [1 insn w/o sources]
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
      [26 insn w/o sources]
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
  rtems/Mutex.java:17            : this.id = idx;
  rtems/Mutex.java:18            : this.nestCount = 0;
  rtems/Mutex.java:19            : this.priorityBefore = -1;
  rtems/Mutex.java:20            : this.holder=null;
  rtems/Mutex.java:21            : }
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  harness/Environment.java:12    : static final Lock[] locks = { createLock(0), createLock(1), createLock(2), createLock(3), createLock(4), createLock(5) };
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  rtems/Mutex.java:15            : public Mutex(int idx){
  base/Lock.java:3               : public class Lock {
      [1 insn w/o sources]
  base/Lock.java:5               : int count = 0;
  rtems/Mutex.java:12            : int priorityBefore=-1;
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
      [1 insn w/o sources]
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
      [26 insn w/o sources]
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
  rtems/Mutex.java:17            : this.id = idx;
  rtems/Mutex.java:18            : this.nestCount = 0;
  rtems/Mutex.java:19            : this.priorityBefore = -1;
  rtems/Mutex.java:20            : this.holder=null;
  rtems/Mutex.java:21            : }
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  harness/Environment.java:12    : static final Lock[] locks = { createLock(0), createLock(1), createLock(2), createLock(3), createLock(4), createLock(5) };
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  rtems/Mutex.java:15            : public Mutex(int idx){
  base/Lock.java:3               : public class Lock {
      [1 insn w/o sources]
  base/Lock.java:5               : int count = 0;
  rtems/Mutex.java:12            : int priorityBefore=-1;
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
      [1 insn w/o sources]
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
      [26 insn w/o sources]
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
  rtems/Mutex.java:17            : this.id = idx;
  rtems/Mutex.java:18            : this.nestCount = 0;
  rtems/Mutex.java:19            : this.priorityBefore = -1;
  rtems/Mutex.java:20            : this.holder=null;
  rtems/Mutex.java:21            : }
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  harness/Environment.java:12    : static final Lock[] locks = { createLock(0), createLock(1), createLock(2), createLock(3), createLock(4), createLock(5) };
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:16    : System.out.println("mutex id: "+id);
      [2 insn w/o sources]
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  rtems/Mutex.java:15            : public Mutex(int idx){
  base/Lock.java:3               : public class Lock {
      [1 insn w/o sources]
  base/Lock.java:5               : int count = 0;
  rtems/Mutex.java:12            : int priorityBefore=-1;
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
      [1 insn w/o sources]
  rtems/Mutex.java:174           : class MyComparator implements Comparator<RTEMSThread>
  rtems/Mutex.java:13            : MyComparator comparator = new MyComparator();
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
      [26 insn w/o sources]
  rtems/Mutex.java:14            : PriorityQueue<RTEMSThread> waitQueue = new PriorityQueue<RTEMSThread>(7, comparator);
  rtems/Mutex.java:17            : this.id = idx;
  rtems/Mutex.java:18            : this.nestCount = 0;
  rtems/Mutex.java:19            : this.priorityBefore = -1;
  rtems/Mutex.java:20            : this.holder=null;
  rtems/Mutex.java:21            : }
  harness/Environment.java:17    : return new /*Prio*/Mutex(id);
  harness/Environment.java:12    : static final Lock[] locks = { createLock(0), createLock(1), createLock(2), createLock(3), createLock(4), createLock(5) };
  harness/Environment.java:1     : package harness;
      [1 insn w/o sources]
  harness/Environment.java:24    : int li1 = 1;
  harness/Environment.java:25    : int li2 = 2;
  harness/Environment.java:26    : RTEMSThread t0 = new TestThread(new int[]{li1, li2});
  harness/TestThread.java:12     : super();
  rtems/RTEMSThread.java:14      : public RTEMSThread() {
      [145 insn w/o sources]
  rtems/RTEMSThread.java:15      : this.mutexOrderList = new ArrayList<Mutex>();
      [9 insn w/o sources]
  rtems/RTEMSThread.java:15      : this.mutexOrderList = new ArrayList<Mutex>();
      [16 insn w/o sources]
  rtems/RTEMSThread.java:15      : this.mutexOrderList = new ArrayList<Mutex>();
  rtems/RTEMSThread.java:16      : this.state = this.getState();
      [9 insn w/o sources]
  rtems/RTEMSThread.java:16      : this.state = this.getState();
  rtems/RTEMSThread.java:17      : this.currentPriority = this.realPriority = this.getPriority();
      [3 insn w/o sources]
  rtems/RTEMSThread.java:17      : this.currentPriority = this.realPriority = this.getPriority();
  rtems/RTEMSThread.java:18      : }
  harness/TestThread.java:13     : idx = lockIdx;
  harness/TestThread.java:14     : locks = new Lock[idx.length];
  harness/TestThread.java:15     : for (int i = 0; i < idx.length; i++) {
  harness/TestThread.java:16     : locks[i] = Environment.locks[idx[i]];
  harness/TestThread.java:15     : for (int i = 0; i < idx.length; i++) {
  harness/TestThread.java:16     : locks[i] = Environment.locks[idx[i]];
  harness/TestThread.java:15     : for (int i = 0; i < idx.length; i++) {
  harness/TestThread.java:18     : }
  harness/Environment.java:26    : RTEMSThread t0 = new TestThread(new int[]{li1, li2});
  harness/Environment.java:28    : t0.setPriority(3);
      [15 insn w/o sources]
  harness/Environment.java:29    : t0.setRealPriority();
  rtems/RTEMSThread.java:25      : this.realPriority = getPriority();
      [3 insn w/o sources]
  rtems/RTEMSThread.java:25      : this.realPriority = getPriority();
  rtems/RTEMSThread.java:26      : }
  harness/Environment.java:30    : t0.setCurrentPriority();
  rtems/RTEMSThread.java:21      : this.currentPriority = getPriority();
      [3 insn w/o sources]
  rtems/RTEMSThread.java:21      : this.currentPriority = getPriority();
  rtems/RTEMSThread.java:22      : }
  harness/Environment.java:31    : System.out.println("Thread 0 has priority " + t0.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:31    : System.out.println("Thread 0 has priority " + t0.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:31    : System.out.println("Thread 0 has priority " + t0.getPriority() +
      [3 insn w/o sources]
  harness/Environment.java:31    : System.out.println("Thread 0 has priority " + t0.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:31    : System.out.println("Thread 0 has priority " + t0.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:31    : System.out.println("Thread 0 has priority " + t0.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:31    : System.out.println("Thread 0 has priority " + t0.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:31    : System.out.println("Thread 0 has priority " + t0.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:31    : System.out.println("Thread 0 has priority " + t0.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:31    : System.out.println("Thread 0 has priority " + t0.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:31    : System.out.println("Thread 0 has priority " + t0.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:34    : t0.start();
      [1 insn w/o sources]
------------------------------------------------------ transition #1 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"START" ,1/2,isCascaded:false}
      [2 insn w/o sources]
  harness/Environment.java:35    : for (int i = 1; i < N_THREADS; i++) {
  harness/Environment.java:36    : int li = i;
  harness/Environment.java:37    : RTEMSThread t = new TestThread(new int[]{li});
  harness/TestThread.java:12     : super();
  rtems/RTEMSThread.java:14      : public RTEMSThread() {
      [27 insn w/o sources]
------------------------------------------------------ transition #2 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/2,isCascaded:false}
      [119 insn w/o sources]
  rtems/RTEMSThread.java:15      : this.mutexOrderList = new ArrayList<Mutex>();
      [16 insn w/o sources]
  rtems/RTEMSThread.java:15      : this.mutexOrderList = new ArrayList<Mutex>();
------------------------------------------------------ transition #3 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"EXPOSE" ,1/2,isCascaded:false}
  rtems/RTEMSThread.java:15      : this.mutexOrderList = new ArrayList<Mutex>();
  rtems/RTEMSThread.java:16      : this.state = this.getState();
      [9 insn w/o sources]
  rtems/RTEMSThread.java:16      : this.state = this.getState();
  rtems/RTEMSThread.java:17      : this.currentPriority = this.realPriority = this.getPriority();
      [3 insn w/o sources]
  rtems/RTEMSThread.java:17      : this.currentPriority = this.realPriority = this.getPriority();
  rtems/RTEMSThread.java:18      : }
  harness/TestThread.java:13     : idx = lockIdx;
  harness/TestThread.java:14     : locks = new Lock[idx.length];
------------------------------------------------------ transition #4 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"EXPOSE" ,1/2,isCascaded:false}
  harness/TestThread.java:14     : locks = new Lock[idx.length];
  harness/TestThread.java:15     : for (int i = 0; i < idx.length; i++) {
  harness/TestThread.java:16     : locks[i] = Environment.locks[idx[i]];
  harness/TestThread.java:15     : for (int i = 0; i < idx.length; i++) {
  harness/TestThread.java:18     : }
  harness/Environment.java:37    : RTEMSThread t = new TestThread(new int[]{li});
  harness/Environment.java:38    : t.setPriority(i);
      [15 insn w/o sources]
  harness/Environment.java:39    : t.setRealPriority();
  rtems/RTEMSThread.java:25      : this.realPriority = getPriority();
      [3 insn w/o sources]
  rtems/RTEMSThread.java:25      : this.realPriority = getPriority();
  rtems/RTEMSThread.java:26      : }
  harness/Environment.java:40    : t.setCurrentPriority();
  rtems/RTEMSThread.java:21      : this.currentPriority = getPriority();
      [3 insn w/o sources]
  rtems/RTEMSThread.java:21      : this.currentPriority = getPriority();
  rtems/RTEMSThread.java:22      : }
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [3 insn w/o sources]
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:44    : t.start();
      [1 insn w/o sources]
------------------------------------------------------ transition #5 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"START" ,1/3,isCascaded:false}
      [2 insn w/o sources]
  harness/Environment.java:35    : for (int i = 1; i < N_THREADS; i++) {
  harness/Environment.java:36    : int li = i;
  harness/Environment.java:37    : RTEMSThread t = new TestThread(new int[]{li});
  harness/TestThread.java:12     : super();
  rtems/RTEMSThread.java:14      : public RTEMSThread() {
      [27 insn w/o sources]
------------------------------------------------------ transition #6 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,1/3,isCascaded:false}
      [119 insn w/o sources]
  rtems/RTEMSThread.java:15      : this.mutexOrderList = new ArrayList<Mutex>();
      [16 insn w/o sources]
  rtems/RTEMSThread.java:15      : this.mutexOrderList = new ArrayList<Mutex>();
------------------------------------------------------ transition #7 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"EXPOSE" ,1/3,isCascaded:false}
  rtems/RTEMSThread.java:15      : this.mutexOrderList = new ArrayList<Mutex>();
  rtems/RTEMSThread.java:16      : this.state = this.getState();
      [9 insn w/o sources]
  rtems/RTEMSThread.java:16      : this.state = this.getState();
  rtems/RTEMSThread.java:17      : this.currentPriority = this.realPriority = this.getPriority();
      [3 insn w/o sources]
  rtems/RTEMSThread.java:17      : this.currentPriority = this.realPriority = this.getPriority();
  rtems/RTEMSThread.java:18      : }
  harness/TestThread.java:13     : idx = lockIdx;
  harness/TestThread.java:14     : locks = new Lock[idx.length];
------------------------------------------------------ transition #8 thread: 0
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"EXPOSE" ,1/3,isCascaded:false}
  harness/TestThread.java:14     : locks = new Lock[idx.length];
  harness/TestThread.java:15     : for (int i = 0; i < idx.length; i++) {
  harness/TestThread.java:16     : locks[i] = Environment.locks[idx[i]];
  harness/TestThread.java:15     : for (int i = 0; i < idx.length; i++) {
  harness/TestThread.java:18     : }
  harness/Environment.java:37    : RTEMSThread t = new TestThread(new int[]{li});
  harness/Environment.java:38    : t.setPriority(i);
      [15 insn w/o sources]
  harness/Environment.java:39    : t.setRealPriority();
  rtems/RTEMSThread.java:25      : this.realPriority = getPriority();
      [3 insn w/o sources]
  rtems/RTEMSThread.java:25      : this.realPriority = getPriority();
  rtems/RTEMSThread.java:26      : }
  harness/Environment.java:40    : t.setCurrentPriority();
  rtems/RTEMSThread.java:21      : this.currentPriority = getPriority();
      [3 insn w/o sources]
  rtems/RTEMSThread.java:21      : this.currentPriority = getPriority();
  rtems/RTEMSThread.java:22      : }
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [3 insn w/o sources]
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:42    : " has priority " + t.getPriority() +
      [2 insn w/o sources]
  harness/Environment.java:41    : System.out.println("Thread " + Integer.toString(i + 1) +
      [2 insn w/o sources]
  harness/Environment.java:44    : t.start();
      [1 insn w/o sources]
------------------------------------------------------ transition #9 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"START" ,2/4,isCascaded:false}
      [1 insn w/o sources]
  harness/TestThread.java:1      : package harness;
  harness/TestThread.java:21     : for (int i = 0; i < idx.length; i++) {
------------------------------------------------------ transition #10 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  harness/TestThread.java:21     : for (int i = 0; i < idx.length; i++) {
  harness/TestThread.java:22     : locks[i].lock();
------------------------------------------------------ transition #11 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  harness/TestThread.java:22     : locks[i].lock();
------------------------------------------------------ transition #12 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/4,isCascaded:false}
  harness/TestThread.java:22     : locks[i].lock();
------------------------------------------------------ transition #13 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/4,isCascaded:false}
  harness/TestThread.java:22     : locks[i].lock();
  rtems/Mutex.java:24            : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
      [2 insn w/o sources]
  rtems/Mutex.java:24            : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
  rtems/Mutex.java:25            : while((holder!=null) && (holder!=thisThread))
------------------------------------------------------ transition #14 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:25            : while((holder!=null) && (holder!=thisThread))
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
------------------------------------------------------ transition #15 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:52            : assert thisThread.getState() != Thread.State.WAITING;
      [9 insn w/o sources]
  rtems/Mutex.java:52            : assert thisThread.getState() != Thread.State.WAITING;
  rtems/Mutex.java:53            : if(holder==null)
------------------------------------------------------ transition #16 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:53            : if(holder==null)
  rtems/Mutex.java:55            : holder = thisThread;
------------------------------------------------------ transition #17 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:55            : holder = thisThread;
  rtems/Mutex.java:56            : assert nestCount==0;
------------------------------------------------------ transition #18 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:56            : assert nestCount==0;
  rtems/Mutex.java:58            : if(this.nestCount==0)
------------------------------------------------------ transition #19 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:58            : if(this.nestCount==0)
  rtems/Mutex.java:60            : assert !(thisThread.mutexOrderList.contains(this));
------------------------------------------------------ transition #20 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:60            : assert !(thisThread.mutexOrderList.contains(this));
      [10 insn w/o sources]
------------------------------------------------------ transition #21 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [7 insn w/o sources]
  rtems/Mutex.java:60            : assert !(thisThread.mutexOrderList.contains(this));
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
------------------------------------------------------ transition #22 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:62            : this.priorityBefore = thisThread.currentPriority;
------------------------------------------------------ transition #23 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:62            : this.priorityBefore = thisThread.currentPriority;
------------------------------------------------------ transition #24 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:62            : this.priorityBefore = thisThread.currentPriority;
  rtems/Mutex.java:63            : thisThread.mutexOrderList.add(0, this);
------------------------------------------------------ transition #25 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:63            : thisThread.mutexOrderList.add(0, this);
      [6 insn w/o sources]
------------------------------------------------------ transition #26 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [8 insn w/o sources]
------------------------------------------------------ transition #27 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [6 insn w/o sources]
------------------------------------------------------ transition #28 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [2 insn w/o sources]
------------------------------------------------------ transition #29 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/4,isCascaded:false}
      [14 insn w/o sources]
------------------------------------------------------ transition #30 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
------------------------------------------------------ transition #31 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
------------------------------------------------------ transition #32 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [9 insn w/o sources]
------------------------------------------------------ transition #33 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [22 insn w/o sources]
------------------------------------------------------ transition #34 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
------------------------------------------------------ transition #35 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/4,isCascaded:false}
      [44 insn w/o sources]
------------------------------------------------------ transition #36 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [1 insn w/o sources]
------------------------------------------------------ transition #37 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"EXPOSE" ,2/4,isCascaded:false}
      [6 insn w/o sources]
------------------------------------------------------ transition #38 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
------------------------------------------------------ transition #39 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [6 insn w/o sources]
------------------------------------------------------ transition #40 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [8 insn w/o sources]
------------------------------------------------------ transition #41 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #42 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
------------------------------------------------------ transition #43 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [2 insn w/o sources]
  rtems/Mutex.java:64            : assert thisThread.mutexOrderList.contains(this);
------------------------------------------------------ transition #44 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:64            : assert thisThread.mutexOrderList.contains(this);
      [10 insn w/o sources]
------------------------------------------------------ transition #45 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [5 insn w/o sources]
------------------------------------------------------ transition #46 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [17 insn w/o sources]
  rtems/Mutex.java:64            : assert thisThread.mutexOrderList.contains(this);
  rtems/Mutex.java:66            : this.nestCount++;
------------------------------------------------------ transition #47 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:66            : this.nestCount++;
------------------------------------------------------ transition #48 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:66            : this.nestCount++;
  rtems/Mutex.java:67            : thisThread.resourceCount++;
------------------------------------------------------ transition #49 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:67            : thisThread.resourceCount++;
------------------------------------------------------ transition #50 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:67            : thisThread.resourceCount++;
  rtems/Mutex.java:68            : }
  harness/TestThread.java:21     : for (int i = 0; i < idx.length; i++) {
------------------------------------------------------ transition #51 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  harness/TestThread.java:21     : for (int i = 0; i < idx.length; i++) {
  harness/TestThread.java:22     : locks[i].lock();
------------------------------------------------------ transition #52 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  harness/TestThread.java:22     : locks[i].lock();
------------------------------------------------------ transition #53 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/4,isCascaded:false}
  harness/TestThread.java:22     : locks[i].lock();
------------------------------------------------------ transition #54 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/4,isCascaded:false}
  harness/TestThread.java:22     : locks[i].lock();
  rtems/Mutex.java:24            : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
      [2 insn w/o sources]
  rtems/Mutex.java:24            : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
  rtems/Mutex.java:25            : while((holder!=null) && (holder!=thisThread))
------------------------------------------------------ transition #55 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:25            : while((holder!=null) && (holder!=thisThread))
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
------------------------------------------------------ transition #56 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:51            : System.out.println("thread-id:"+ thisThread.getId() + " acquiring mutex "+ this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:52            : assert thisThread.getState() != Thread.State.WAITING;
      [9 insn w/o sources]
  rtems/Mutex.java:52            : assert thisThread.getState() != Thread.State.WAITING;
  rtems/Mutex.java:53            : if(holder==null)
------------------------------------------------------ transition #57 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:53            : if(holder==null)
  rtems/Mutex.java:55            : holder = thisThread;
------------------------------------------------------ transition #58 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:55            : holder = thisThread;
  rtems/Mutex.java:56            : assert nestCount==0;
------------------------------------------------------ transition #59 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:56            : assert nestCount==0;
  rtems/Mutex.java:58            : if(this.nestCount==0)
------------------------------------------------------ transition #60 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:58            : if(this.nestCount==0)
  rtems/Mutex.java:60            : assert !(thisThread.mutexOrderList.contains(this));
------------------------------------------------------ transition #61 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:60            : assert !(thisThread.mutexOrderList.contains(this));
      [10 insn w/o sources]
------------------------------------------------------ transition #62 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [5 insn w/o sources]
------------------------------------------------------ transition #63 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [15 insn w/o sources]
------------------------------------------------------ transition #64 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [7 insn w/o sources]
  rtems/Mutex.java:60            : assert !(thisThread.mutexOrderList.contains(this));
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
------------------------------------------------------ transition #65 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:61            : System.out.println("thread: "+thisThread.getId() + "adding mutex: "+ this.id + " to its mutexOrderList");
      [2 insn w/o sources]
  rtems/Mutex.java:62            : this.priorityBefore = thisThread.currentPriority;
------------------------------------------------------ transition #66 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:62            : this.priorityBefore = thisThread.currentPriority;
------------------------------------------------------ transition #67 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:62            : this.priorityBefore = thisThread.currentPriority;
  rtems/Mutex.java:63            : thisThread.mutexOrderList.add(0, this);
------------------------------------------------------ transition #68 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:63            : thisThread.mutexOrderList.add(0, this);
      [6 insn w/o sources]
------------------------------------------------------ transition #69 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [8 insn w/o sources]
------------------------------------------------------ transition #70 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [6 insn w/o sources]
------------------------------------------------------ transition #71 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [2 insn w/o sources]
------------------------------------------------------ transition #72 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_CLASS" ,2/4,isCascaded:false}
      [8 insn w/o sources]
------------------------------------------------------ transition #73 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
------------------------------------------------------ transition #74 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
------------------------------------------------------ transition #75 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [8 insn w/o sources]
------------------------------------------------------ transition #76 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
------------------------------------------------------ transition #77 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [6 insn w/o sources]
------------------------------------------------------ transition #78 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [8 insn w/o sources]
------------------------------------------------------ transition #79 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #80 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
------------------------------------------------------ transition #81 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [2 insn w/o sources]
  rtems/Mutex.java:64            : assert thisThread.mutexOrderList.contains(this);
------------------------------------------------------ transition #82 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:64            : assert thisThread.mutexOrderList.contains(this);
      [10 insn w/o sources]
------------------------------------------------------ transition #83 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [5 insn w/o sources]
------------------------------------------------------ transition #84 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [17 insn w/o sources]
  rtems/Mutex.java:64            : assert thisThread.mutexOrderList.contains(this);
  rtems/Mutex.java:66            : this.nestCount++;
------------------------------------------------------ transition #85 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:66            : this.nestCount++;
------------------------------------------------------ transition #86 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:66            : this.nestCount++;
  rtems/Mutex.java:67            : thisThread.resourceCount++;
------------------------------------------------------ transition #87 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:67            : thisThread.resourceCount++;
------------------------------------------------------ transition #88 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:67            : thisThread.resourceCount++;
  rtems/Mutex.java:68            : }
  harness/TestThread.java:21     : for (int i = 0; i < idx.length; i++) {
------------------------------------------------------ transition #89 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  harness/TestThread.java:21     : for (int i = 0; i < idx.length; i++) {
  harness/TestThread.java:24     : for (int i = idx.length-1; i>= 0; i--) {
------------------------------------------------------ transition #90 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  harness/TestThread.java:24     : for (int i = idx.length-1; i>= 0; i--) {
  harness/TestThread.java:25     : locks[i].unlock();
------------------------------------------------------ transition #91 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  harness/TestThread.java:25     : locks[i].unlock();
------------------------------------------------------ transition #92 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/4,isCascaded:false}
  harness/TestThread.java:25     : locks[i].unlock();
------------------------------------------------------ transition #93 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,2/4,isCascaded:false}
  harness/TestThread.java:25     : locks[i].unlock();
  rtems/Mutex.java:71            : Mutex topMutex=null;
  rtems/Mutex.java:72            : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
      [2 insn w/o sources]
  rtems/Mutex.java:72            : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
  rtems/Mutex.java:75            : assert nestCount>0;
------------------------------------------------------ transition #94 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:75            : assert nestCount>0;
  rtems/Mutex.java:76            : assert thisThread.resourceCount>0;
------------------------------------------------------ transition #95 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:76            : assert thisThread.resourceCount>0;
  rtems/Mutex.java:77            : this.nestCount--;
------------------------------------------------------ transition #96 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:77            : this.nestCount--;
------------------------------------------------------ transition #97 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:77            : this.nestCount--;
  rtems/Mutex.java:78            : thisThread.resourceCount--;
------------------------------------------------------ transition #98 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:78            : thisThread.resourceCount--;
------------------------------------------------------ transition #99 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:78            : thisThread.resourceCount--;
  rtems/Mutex.java:79            : if(this.nestCount==0)
------------------------------------------------------ transition #100 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:79            : if(this.nestCount==0)
  rtems/Mutex.java:81            : topMutex = thisThread.mutexOrderList.get(0);
------------------------------------------------------ transition #101 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:81            : topMutex = thisThread.mutexOrderList.get(0);
      [6 insn w/o sources]
------------------------------------------------------ transition #102 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [8 insn w/o sources]
------------------------------------------------------ transition #103 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [5 insn w/o sources]
  rtems/Mutex.java:81            : topMutex = thisThread.mutexOrderList.get(0);
  rtems/Mutex.java:82            : assert this==topMutex;
  rtems/Mutex.java:83            : topMutex = thisThread.mutexOrderList.remove(0);
------------------------------------------------------ transition #104 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:83            : topMutex = thisThread.mutexOrderList.remove(0);
      [6 insn w/o sources]
------------------------------------------------------ transition #105 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [6 insn w/o sources]
------------------------------------------------------ transition #106 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
------------------------------------------------------ transition #107 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [6 insn w/o sources]
------------------------------------------------------ transition #108 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [7 insn w/o sources]
------------------------------------------------------ transition #109 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [10 insn w/o sources]
------------------------------------------------------ transition #110 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [6 insn w/o sources]
------------------------------------------------------ transition #111 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [8 insn w/o sources]
------------------------------------------------------ transition #112 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
------------------------------------------------------ transition #113 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [5 insn w/o sources]
------------------------------------------------------ transition #114 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
      [1 insn w/o sources]
  harness/TestThread.java:1      : package harness;
  harness/TestThread.java:21     : for (int i = 0; i < idx.length; i++) {
------------------------------------------------------ transition #115 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  harness/TestThread.java:21     : for (int i = 0; i < idx.length; i++) {
  harness/TestThread.java:22     : locks[i].lock();
------------------------------------------------------ transition #116 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  harness/TestThread.java:22     : locks[i].lock();
------------------------------------------------------ transition #117 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,3/4,isCascaded:false}
  harness/TestThread.java:22     : locks[i].lock();
------------------------------------------------------ transition #118 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"LOCK" ,3/4,isCascaded:false}
  harness/TestThread.java:22     : locks[i].lock();
  rtems/Mutex.java:24            : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
      [2 insn w/o sources]
  rtems/Mutex.java:24            : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
  rtems/Mutex.java:25            : while((holder!=null) && (holder!=thisThread))
------------------------------------------------------ transition #119 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:25            : while((holder!=null) && (holder!=thisThread))
------------------------------------------------------ transition #120 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:25            : while((holder!=null) && (holder!=thisThread))
  rtems/Mutex.java:27            : assert (thisThread.currentPriority == thisThread.getPriority());
------------------------------------------------------ transition #121 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:27            : assert (thisThread.currentPriority == thisThread.getPriority());
      [3 insn w/o sources]
  rtems/Mutex.java:27            : assert (thisThread.currentPriority == thisThread.getPriority());
  rtems/Mutex.java:29            : thisThread.state = Thread.State.WAITING;
------------------------------------------------------ transition #122 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:29            : thisThread.state = Thread.State.WAITING;
  rtems/Mutex.java:30            : if(priorityRaiseFilter(thisThread.currentPriority))
------------------------------------------------------ transition #123 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:30            : if(priorityRaiseFilter(thisThread.currentPriority))
  rtems/Mutex.java:123           : int holderPriority = holder.getPriority();
------------------------------------------------------ transition #124 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:123           : int holderPriority = holder.getPriority();
      [3 insn w/o sources]
  rtems/Mutex.java:123           : int holderPriority = holder.getPriority();
  rtems/Mutex.java:124           : return (priority < holderPriority);
  rtems/Mutex.java:30            : if(priorityRaiseFilter(thisThread.currentPriority))
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
------------------------------------------------------ transition #125 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
------------------------------------------------------ transition #126 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
------------------------------------------------------ transition #127 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
------------------------------------------------------ transition #128 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:32            : System.out.println("raising pr of tid : "+ holder.getId() + "by tid: " + thisThread.getId()+" frm :"+holder.currentPriority + " to: "+ thisThread.currentPriority);
      [2 insn w/o sources]
  rtems/Mutex.java:33            : updateRecPriority(thisThread.currentPriority);
------------------------------------------------------ transition #129 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:33            : updateRecPriority(thisThread.currentPriority);
  rtems/Mutex.java:139           : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
      [2 insn w/o sources]
  rtems/Mutex.java:139           : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
  rtems/Mutex.java:140           : System.out.println("thread id "+ thisThread.getId() + " in updateRecPriority");
      [2 insn w/o sources]
  rtems/Mutex.java:140           : System.out.println("thread id "+ thisThread.getId() + " in updateRecPriority");
      [2 insn w/o sources]
  rtems/Mutex.java:140           : System.out.println("thread id "+ thisThread.getId() + " in updateRecPriority");
      [2 insn w/o sources]
  rtems/Mutex.java:140           : System.out.println("thread id "+ thisThread.getId() + " in updateRecPriority");
      [2 insn w/o sources]
  rtems/Mutex.java:140           : System.out.println("thread id "+ thisThread.getId() + " in updateRecPriority");
      [2 insn w/o sources]
  rtems/Mutex.java:140           : System.out.println("thread id "+ thisThread.getId() + " in updateRecPriority");
      [2 insn w/o sources]
  rtems/Mutex.java:140           : System.out.println("thread id "+ thisThread.getId() + " in updateRecPriority");
      [2 insn w/o sources]
  rtems/Mutex.java:142           : assert this.holder!=null;
------------------------------------------------------ transition #130 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:142           : assert this.holder!=null;
  rtems/Mutex.java:143           : Iterator<Mutex> mItr = this.holder.mutexOrderList.iterator();
------------------------------------------------------ transition #131 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:143           : Iterator<Mutex> mItr = this.holder.mutexOrderList.iterator();
------------------------------------------------------ transition #132 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:143           : Iterator<Mutex> mItr = this.holder.mutexOrderList.iterator();
      [25 insn w/o sources]
  rtems/Mutex.java:143           : Iterator<Mutex> mItr = this.holder.mutexOrderList.iterator();
  rtems/Mutex.java:144           : int mutexIdx = this.holder.getMutexIndex(this);
------------------------------------------------------ transition #133 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:144           : int mutexIdx = this.holder.getMutexIndex(this);
  rtems/RTEMSThread.java:29      : return this.mutexOrderList.indexOf(obj);
------------------------------------------------------ transition #134 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/RTEMSThread.java:29      : return this.mutexOrderList.indexOf(obj);
      [7 insn w/o sources]
------------------------------------------------------ transition #135 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
      [5 insn w/o sources]
------------------------------------------------------ transition #136 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #137 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,3/4,isCascaded:false}
      [11 insn w/o sources]
  rtems/RTEMSThread.java:29      : return this.mutexOrderList.indexOf(obj);
  rtems/Mutex.java:144           : int mutexIdx = this.holder.getMutexIndex(this);
  rtems/Mutex.java:145           : System.out.println("chcking holder id before crashing: "+this.holder.getId()+" And iterating over its list of mutex");
      [2 insn w/o sources]
  rtems/Mutex.java:145           : System.out.println("chcking holder id before crashing: "+this.holder.getId()+" And iterating over its list of mutex");
      [2 insn w/o sources]
  rtems/Mutex.java:145           : System.out.println("chcking holder id before crashing: "+this.holder.getId()+" And iterating over its list of mutex");
------------------------------------------------------ transition #138 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:145           : System.out.println("chcking holder id before crashing: "+this.holder.getId()+" And iterating over its list of mutex");
      [2 insn w/o sources]
  rtems/Mutex.java:145           : System.out.println("chcking holder id before crashing: "+this.holder.getId()+" And iterating over its list of mutex");
      [2 insn w/o sources]
  rtems/Mutex.java:145           : System.out.println("chcking holder id before crashing: "+this.holder.getId()+" And iterating over its list of mutex");
      [2 insn w/o sources]
  rtems/Mutex.java:145           : System.out.println("chcking holder id before crashing: "+this.holder.getId()+" And iterating over its list of mutex");
      [2 insn w/o sources]
  rtems/Mutex.java:145           : System.out.println("chcking holder id before crashing: "+this.holder.getId()+" And iterating over its list of mutex");
      [2 insn w/o sources]
  rtems/Mutex.java:146           : while (mItr.hasNext()){
      [7 insn w/o sources]
------------------------------------------------------ transition #139 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
      [6 insn w/o sources]
  rtems/Mutex.java:146           : while (mItr.hasNext()){
  rtems/Mutex.java:147           : chkMtx = mItr.next();
      [5 insn w/o sources]
------------------------------------------------------ transition #140 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
      [14 insn w/o sources]
------------------------------------------------------ transition #141 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
      [6 insn w/o sources]
------------------------------------------------------ transition #142 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
      [17 insn w/o sources]
------------------------------------------------------ transition #143 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,3/4,isCascaded:false}
      [2 insn w/o sources]
  rtems/Mutex.java:147           : chkMtx = mItr.next();
  rtems/Mutex.java:148           : System.out.println("Checking--->Mutex: "+chkMtx.id);
      [2 insn w/o sources]
  rtems/Mutex.java:148           : System.out.println("Checking--->Mutex: "+chkMtx.id);
      [2 insn w/o sources]
  rtems/Mutex.java:148           : System.out.println("Checking--->Mutex: "+chkMtx.id);
------------------------------------------------------ transition #144 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
  rtems/Mutex.java:148           : System.out.println("Checking--->Mutex: "+chkMtx.id);
      [2 insn w/o sources]
  rtems/Mutex.java:148           : System.out.println("Checking--->Mutex: "+chkMtx.id);
      [2 insn w/o sources]
  rtems/Mutex.java:148           : System.out.println("Checking--->Mutex: "+chkMtx.id);
      [2 insn w/o sources]
  rtems/Mutex.java:148           : System.out.println("Checking--->Mutex: "+chkMtx.id);
  rtems/Mutex.java:146           : while (mItr.hasNext()){
      [7 insn w/o sources]
------------------------------------------------------ transition #145 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,3/4,isCascaded:false}
      [6 insn w/o sources]
  rtems/Mutex.java:146           : while (mItr.hasNext()){
  rtems/Mutex.java:147           : chkMtx = mItr.next();
      [5 insn w/o sources]
------------------------------------------------------ transition #146 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [3 insn w/o sources]
------------------------------------------------------ transition #147 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/4,isCascaded:false}
      [3 insn w/o sources]
  rtems/Mutex.java:83            : topMutex = thisThread.mutexOrderList.remove(0);
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
      [3 insn w/o sources]
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
------------------------------------------------------ transition #148 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:84            : System.out.println("Holder Thread: "+thisThread.getId()+"before resetting priority_before : "+ thisThread.getPriority()+" while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:85            : thisThread.setPriority(this.priorityBefore);
------------------------------------------------------ transition #149 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:85            : thisThread.setPriority(this.priorityBefore);
      [15 insn w/o sources]
  rtems/Mutex.java:86            : thisThread.currentPriority = this.priorityBefore;
------------------------------------------------------ transition #150 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:86            : thisThread.currentPriority = this.priorityBefore;
------------------------------------------------------ transition #151 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:86            : thisThread.currentPriority = this.priorityBefore;
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
      [3 insn w/o sources]
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
------------------------------------------------------ transition #152 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:87            : System.out.println("Holder Thread: "+thisThread.getId()+ " after stepdown ops-->current priority: " + thisThread.getPriority() + " while releasing mutex: " + this.id);
      [2 insn w/o sources]
  rtems/Mutex.java:88            : validator();
  rtems/Mutex.java:106           : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
      [2 insn w/o sources]
  rtems/Mutex.java:106           : RTEMSThread thisThread = (RTEMSThread)Thread.currentThread();
  rtems/Mutex.java:107           : Iterator<Mutex> mItr = thisThread.mutexOrderList.iterator();
------------------------------------------------------ transition #153 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:107           : Iterator<Mutex> mItr = thisThread.mutexOrderList.iterator();
      [25 insn w/o sources]
  rtems/Mutex.java:107           : Iterator<Mutex> mItr = thisThread.mutexOrderList.iterator();
  rtems/Mutex.java:108           : while (mItr.hasNext()){
      [7 insn w/o sources]
------------------------------------------------------ transition #154 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [6 insn w/o sources]
  rtems/Mutex.java:108           : while (mItr.hasNext()){
  rtems/Mutex.java:109           : chkMtx = mItr.next();
      [5 insn w/o sources]
------------------------------------------------------ transition #155 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [14 insn w/o sources]
------------------------------------------------------ transition #156 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [6 insn w/o sources]
------------------------------------------------------ transition #157 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [17 insn w/o sources]
------------------------------------------------------ transition #158 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/4,isCascaded:false}
      [2 insn w/o sources]
  rtems/Mutex.java:109           : chkMtx = mItr.next();
  rtems/Mutex.java:110           : System.out.println("--->Mutex: "+chkMtx.id);
      [2 insn w/o sources]
  rtems/Mutex.java:110           : System.out.println("--->Mutex: "+chkMtx.id);
      [2 insn w/o sources]
  rtems/Mutex.java:110           : System.out.println("--->Mutex: "+chkMtx.id);
------------------------------------------------------ transition #159 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:110           : System.out.println("--->Mutex: "+chkMtx.id);
      [2 insn w/o sources]
  rtems/Mutex.java:110           : System.out.println("--->Mutex: "+chkMtx.id);
      [2 insn w/o sources]
  rtems/Mutex.java:110           : System.out.println("--->Mutex: "+chkMtx.id);
      [2 insn w/o sources]
  rtems/Mutex.java:111           : chkThr = chkMtx.waitQueue.peek();
------------------------------------------------------ transition #160 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:111           : chkThr = chkMtx.waitQueue.peek();
      [2 insn w/o sources]
------------------------------------------------------ transition #161 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [5 insn w/o sources]
  rtems/Mutex.java:111           : chkThr = chkMtx.waitQueue.peek();
  rtems/Mutex.java:112           : if(chkThr!=null)
  rtems/Mutex.java:108           : while (mItr.hasNext()){
      [7 insn w/o sources]
------------------------------------------------------ transition #162 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [5 insn w/o sources]
  rtems/Mutex.java:108           : while (mItr.hasNext()){
  rtems/Mutex.java:120           : }
  rtems/Mutex.java:89            : assert holder!=null;
------------------------------------------------------ transition #163 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:89            : assert holder!=null;
  rtems/Mutex.java:90            : assert holder.wait==null;
------------------------------------------------------ transition #164 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:90            : assert holder.wait==null;
------------------------------------------------------ transition #165 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:90            : assert holder.wait==null;
  rtems/Mutex.java:91            : this.holder = waitQueue.poll();
------------------------------------------------------ transition #166 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:91            : this.holder = waitQueue.poll();
      [2 insn w/o sources]
------------------------------------------------------ transition #167 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
      [4 insn w/o sources]
  rtems/Mutex.java:91            : this.holder = waitQueue.poll();
------------------------------------------------------ transition #168 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:91            : this.holder = waitQueue.poll();
  rtems/Mutex.java:92            : if(holder != null){
------------------------------------------------------ transition #169 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:92            : if(holder != null){
  rtems/Mutex.java:99            : System.out.println(" holder = null Released Mutex: "+topMutex.id+" by thread: "+thisThread.getId());
      [2 insn w/o sources]
  rtems/Mutex.java:99            : System.out.println(" holder = null Released Mutex: "+topMutex.id+" by thread: "+thisThread.getId());
      [2 insn w/o sources]
  rtems/Mutex.java:99            : System.out.println(" holder = null Released Mutex: "+topMutex.id+" by thread: "+thisThread.getId());
------------------------------------------------------ transition #170 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  rtems/Mutex.java:99            : System.out.println(" holder = null Released Mutex: "+topMutex.id+" by thread: "+thisThread.getId());
      [2 insn w/o sources]
  rtems/Mutex.java:99            : System.out.println(" holder = null Released Mutex: "+topMutex.id+" by thread: "+thisThread.getId());
      [2 insn w/o sources]
  rtems/Mutex.java:99            : System.out.println(" holder = null Released Mutex: "+topMutex.id+" by thread: "+thisThread.getId());
      [2 insn w/o sources]
  rtems/Mutex.java:99            : System.out.println(" holder = null Released Mutex: "+topMutex.id+" by thread: "+thisThread.getId());
      [2 insn w/o sources]
  rtems/Mutex.java:99            : System.out.println(" holder = null Released Mutex: "+topMutex.id+" by thread: "+thisThread.getId());
      [2 insn w/o sources]
  rtems/Mutex.java:99            : System.out.println(" holder = null Released Mutex: "+topMutex.id+" by thread: "+thisThread.getId());
      [2 insn w/o sources]
  rtems/Mutex.java:101           : }
  harness/TestThread.java:24     : for (int i = idx.length-1; i>= 0; i--) {
  harness/TestThread.java:25     : locks[i].unlock();
------------------------------------------------------ transition #171 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/4,isCascaded:false}
  harness/TestThread.java:25     : locks[i].unlock();
------------------------------------------------------ transition #172 thread: 1
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_ARRAY" ,2/4,isCascaded:false}
  harness/TestThread.java:25     : locks[i].unlock();
------------------------------------------------------ transition #173 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"BLOCK" ,2/3,isCascaded:false}
      [14 insn w/o sources]
------------------------------------------------------ transition #174 thread: 2
gov.nasa.jpf.vm.choice.ThreadChoiceFromSet {id:"SHARED_OBJECT" ,2/3,isCascaded:false}
      [30 insn w/o sources]

====================================================== snapshot #1
thread java.lang.Thread:{id:0,name:main,status:RUNNING,priority:5,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:
	at java.lang.Thread.start(Thread.java)
	at harness.Environment.main(Environment.java:44)

thread harness.TestThread:{id:1,name:Thread-1,status:BLOCKED,priority:3,isDaemon:false,lockCount:0,suspendCount:0}
  blocked on: rtems.Mutex@191
  call stack:
	at harness.TestThread.run(TestThread.java:25)

thread harness.TestThread:{id:2,name:Thread-2,status:RUNNING,priority:1,isDaemon:false,lockCount:0,suspendCount:0}
  owned locks:rtems.Mutex@191
  call stack:
	at java.util.ArrayList$Itr.next(ArrayList.java:854)
	at rtems.Mutex.updateRecPriority(Mutex.java:147)
	at rtems.Mutex.lock(Mutex.java:33)
	at harness.TestThread.run(TestThread.java:22)

thread harness.TestThread:{id:3,name:Thread-3,status:RUNNING,priority:2,isDaemon:false,lockCount:0,suspendCount:0}
  call stack:


====================================================== results
error #1: gov.nasa.jpf.vm.NoUncaughtExceptionsProperty "java.util.NoSuchElementException  at java.util.Arr..."

====================================================== statistics
elapsed time:       00:00:38
states:             new=80199,visited=206551,backtracked=286575,end=79757
search:             maxDepth=405,constraints=0
choice generators:  thread=79766 (signal=62,lock=3577,sharedRef=71403,threadApi=58,reschedule=4666), data=0
heap:               new=106788,released=336217,maxLive=535,gcCycles=279691
instructions:       2620263
max memory:         287MB
loaded code:        classes=82,methods=1811

====================================================== search finished: 6/25/15 1:38 PM
]0;saurabh@saurabh-Inspiron-N5010: ~/model_checking/new2-lockmodel/lock-modelsaurabh@saurabh-Inspiron-N5010:~/model_checking/new2-lockmodel/lock-model$ exit
exit

Script done on Thu 25 Jun 2015 01:39:15 PM PDT
