Script started on Thu 02 Jul 2015 03:48:10 PM PDT
]0;saurabh@saurabh-Inspiron-N5010: ~/model_checking/new2-lockmodel/lock-modelsaurabh@saurabh-Inspiron-N5010:~/model_checking/new2-lockmodel/lock-model$ ./jpf.sh 
JavaPathfinder core system v8.0 (rev 25+) - (C) 2005-2014 United States Government. All rights reserved.


====================================================== system under test
harness.Environment.main()

====================================================== search started: 7/2/15 3:48 PM
Thread 0 has priority 3 and uses locks 1, and 2.
Thread 2 has priority 1 and uses lock 1.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
--->Mutex: 1
------>Thread-id: 2 priority: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
--->Mutex: 1
------>Thread-id: 2 priority: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :2 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :3 in waitQ of mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :2 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :3 in waitQ of mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :2 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :3 in waitQ of mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :2 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :3 in waitQ of mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :2 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :3 in waitQ of mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :2 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :3 in waitQ of mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :2 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 3by thread : 1 frm :2 to: 1
updated pr for tid: 3 current pr: 1
Adding thread :1 in waitQ of mutex: 2
--->Mutex: 1
------>Thread-id: 2 priority: 1
Holder Thread: 3before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
--->Mutex: 1
------>Thread-id: 2 priority: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
--->Mutex: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
updated pr for tid: 3 current pr: 1
updated pr for tid: 3 current pr: 1
updated pr for tid: 3 current pr: 1
updated pr for tid: 3 current pr: 1
updated pr for tid: 3 current pr: 1
updated pr for tid: 3 current pr: 1
raising priority of thread: 3by thread : 1 frm :2 to: 1
raising priority of thread: 3by thread : 1 frm :2 to: 1
raising priority of thread: 3by thread : 1 frm :2 to: 1
raising priority of thread: 3by thread : 1 frm :2 to: 1
raising priority of thread: 3by thread : 1 frm :2 to: 1
raising priority of thread: 3by thread : 1 frm :2 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
--->Mutex: 1
------>Thread-id: 2 priority: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
------>Thread-id: 2 priority: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 2
--->Mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread: 1 being re-enqued by thread: 2
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
thread: 1 being re-enqued by thread: 2
thread: 1 being re-enqued by thread: 2
thread: 1 being re-enqued by thread: 2
thread: 1 being re-enqued by thread: 2
thread: 1 being re-enqued by thread: 2
thread: 1 being re-enqued by thread: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 2
--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 2
--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 2
--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 2
--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 2
--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
Adding thread :2 in waitQ of mutex: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
updated pr for tid: 1 current pr: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 2
--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 2
--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 2
--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 2
--->Mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Adding thread :1 in waitQ of mutex: 2
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
Holder Thread: 1before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
raising priority of thread: 1by thread : 3 frm :3 to: 2
updated pr for tid: 1 current pr: 2
Adding thread :3 in waitQ of mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread: 2adding mutex: 1 to its mutexOrderList
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
thread-id:3 acquiring mutex 2
thread: 3adding mutex: 2 to its mutexOrderList
Holder Thread: 3before resetting priority_before : 2 while releasing mutex: 2
Holder Thread: 3 after stepdown ops-->current priority: 2 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
------>Thread-id: 2 priority: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
raising priority of thread: 1by thread : 2 frm :3 to: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
updated pr for tid: 1 current pr: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :2 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :1 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Adding thread :1 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Adding thread :1 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Adding thread :1 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Adding thread :1 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Adding thread :1 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Adding thread :1 in waitQ of mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
--->Mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 2
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
--->Mutex: 1
------>Thread-id: 2 priority: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread: 2adding mutex: 1 to its mutexOrderList
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
--->Mutex: 1
------>Thread-id: 2 priority: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
--->Mutex: 1
------>Thread-id: 2 priority: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
--->Mutex: 1
------>Thread-id: 2 priority: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 1 while releasing mutex: 2
--->Mutex: 1
------>Thread-id: 2 priority: 1
Holder Thread: 1before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
raising priority of thread: 1by thread : 2 frm :3 to: 1
updated pr for tid: 1 current pr: 1
Adding thread :2 in waitQ of mutex: 1
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Adding thread :1 in waitQ of mutex: 1
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 3 has priority 2 and uses lock 2.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
--->Mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread: 1adding mutex: 2 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:1 acquiring mutex 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
thread-id:2 acquiring mutex 1
thread: 2adding mutex: 1 to its mutexOrderList
Holder Thread: 2before resetting priority_before : 1 while releasing mutex: 1
Holder Thread: 2 after stepdown ops-->current priority: 1 while releasing mutex: 1
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
thread-id:1 acquiring mutex 1
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
thread: 1adding mutex: 1 to its mutexOrderList
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
thread-id:1 acquiring mutex 2
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
thread: 1adding mutex: 2 to its mutexOrderList
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
--->Mutex: 1
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
Thread 2 has priority 1 and uses lock 1.
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 2 has priority 1 and uses lock 1.
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 2 has priority 1 and uses lock 1.
thread-id:1 acquiring mutex 1
thread: 1adding mutex: 1 to its mutexOrderList
thread-id:1 acquiring mutex 2
thread: 1adding mutex: 2 to its mutexOrderList
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 2
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 2
--->Mutex: 1
Holder Thread: 1before resetting priority_before : 3 while releasing mutex: 1
Holder Thread: 1 after stepdown ops-->current priority: 3 while releasing mutex: 1
Thread 2 has priority 1 and uses lock 1.

====================================================== results
no errors detected

====================================================== statistics
elapsed time:       00:01:27
states:             new=204706,visited=489843,backtracked=694549,end=171564
search:             maxDepth=512,constraints=0
choice generators:  thread=204014 (signal=451,lock=13988,sharedRef=161098,threadApi=345,reschedule=28132), data=0
heap:               new=205325,released=782671,maxLive=508,gcCycles=676496
instructions:       7057381
max memory:         373MB
loaded code:        classes=76,methods=1774

====================================================== search finished: 7/2/15 3:49 PM
]0;saurabh@saurabh-Inspiron-N5010: ~/model_checking/new2-lockmodel/lock-modelsaurabh@saurabh-Inspiron-N5010:~/model_checking/new2-lockmodel/lock-model$ exit
exit

Script done on Thu 02 Jul 2015 03:51:12 PM PDT
